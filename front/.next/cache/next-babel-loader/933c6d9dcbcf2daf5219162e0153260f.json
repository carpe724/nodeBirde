{"ast":null,"code":"import { all, fork, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // 서버가 없으므로 잠시 주석\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS' // 서버가 없으므로 잠시 주석\n      // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/jaeho/Desktop/nodeBirde/front/sagas/post.js"],"names":["all","fork","takeLatest","delay","axios","addPostAPI","data","post","addPost","action","put","type","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,QAA6C,oBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAI;AACA;AACA;AAEA,UAAMN,KAAK,CAAC,IAAD,CAAX;AAEA,UAAMO,GAAG,CAAC;AACNC,MAAAA,IAAI,EAAE,kBADA,CAEN;AACA;;AAHM,KAAD,CAAT;AAKH,GAXD,CAWE,OAAMC,GAAN,EAAU;AACR,UAAMF,GAAG,CAAC;AACNC,MAAAA,IAAI,EAAE,kBADA;AAENL,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUQ,YAAV,GAAwB;AACpB,QAAMZ,UAAU,CAAC,kBAAD,EAAqBM,OAArB,CAAhB;AACH;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CACNC,IAAI,CAACa,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, takeLatest, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nfunction addPostAPI(data){\r\n    return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* addPost(action){\r\n    try {\r\n        // 서버가 없으므로 잠시 주석\r\n        // const result = yield call(addPostAPI, action.data);\r\n\r\n        yield delay(1000);\r\n\r\n        yield put({\r\n            type: 'ADD_POST_SUCCESS',\r\n            // 서버가 없으므로 잠시 주석\r\n            // data: result.data,\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type: 'ADD_POST_FAILURE',\r\n            data: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest('ADD_POST_REQUEST', addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}