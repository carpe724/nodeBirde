{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\jaeho\\\\Desktop\\\\nodeBirde\\\\front\\\\components\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.group(post.id, commentText);\n  }, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    row: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      position: \"absolute\",\n      right: 0,\n      bottom: -40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\n_s(CommentForm, \"PptqMkMnW7reCXQEE7qotaIWwp0=\", false, function () {\n  return [useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/jaeho/Desktop/nodeBirde/front/components/CommentForm.js"],"names":["React","useCallback","useSelector","Form","Input","Button","useInput","PropTypes","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","onSubmitComment","console","group","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B,MAAMC,EAAE,GAAGR,WAAW,CAAC,UAACS,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AAD8B,kBAEaJ,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,MAEvBQ,WAFuB;AAAA,MAEVC,mBAFU;;AAG9B,MAAMC,eAAe,GAAGf,WAAW,CAAC,YAAI;AACpCgB,IAAAA,OAAO,CAACC,KAAR,CAAcT,IAAI,CAACC,EAAnB,EAAuBI,WAAvB;AACH,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAGA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEN,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,GAAG,EAAE,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,KAAK,EAAE;AAAEI,MAAAA,QAAQ,EAAC,UAAX;AAAuBE,MAAAA,KAAK,EAAE,CAA9B;AAAiCC,MAAAA,MAAM,EAAE,CAAC;AAA1C,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ;AAQH,CAdD;;GAAMd,W;UACSN,W,EACgCI,Q;;;KAFzCE,W;AAgBNA,WAAW,CAACe,SAAZ,GAAwB;AACpBd,EAAAA,IAAI,EAAEF,SAAS,CAACiB,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAejB,WAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Form, Input, Button } from 'antd';\r\nimport useInput from '../hooks/useInput';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const [commentText, onChangeCommentText] = useInput('');\r\n    const onSubmitComment = useCallback(()=>{\r\n        console.group(post.id, commentText)\r\n    }, [commentText])\r\n    return(\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{ position: 'relative', margin: 0 }} >\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} row={4} />\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{ position:\"absolute\", right: 0, bottom: -40 }}>삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}