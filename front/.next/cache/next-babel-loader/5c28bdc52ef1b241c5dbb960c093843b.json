{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\jaeho\\\\Desktop\\\\nodeBirde\\\\front\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  });\n  var dispatch = useDispatch();\n  var onSubmit = useCallback(function () {\n    dispatch(addPost);\n  }, []);\n  var imageInput = useRef();\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uBCF4\\uC138\\uC694~!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: imagesUploadClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"hH4TLBmSIzuv6G++oUu9o3Qzv3c=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/jaeho/Desktop/nodeBirde/front/components/PostForm.js"],"names":["React","useCallback","useState","useRef","Form","Input","Button","useSelector","useDispatch","addPost","PostForm","state","post","imagePaths","text","setText","onChangeText","e","target","value","dispatch","onSubmit","imageInput","margin","imagesUploadClick","map","v","display","width"],"mappings":"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","sourcesContent":["\r\nimport React, { useCallback, useState, useRef } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addPost } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const { imagePaths } = useSelector((state)=> state.post);\r\n\r\n    const [text, setText] = useState('');\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value)\r\n    });\r\n\r\n    const dispatch = useDispatch()\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(addPost)\r\n    }, []);\r\n\r\n    const imageInput = useRef();\r\n\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit} >\r\n            <Input.TextArea \r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder=\"글을 입력해보세요~!\"\r\n            /> \r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput} />\r\n                <Button onClick={imagesUploadClick}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v)=>{\r\n                    return(\r\n                        <div key={v} style={{ display: 'inline-block' }}>\r\n                            <img src={v} style={{ width: '200px' }}  alt={v} />\r\n                            <div>\r\n                                <Button>제거</Button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n                {/* 이미지 업로드시 이미지 미리보는 부분 */}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}