{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaeho\\\\Desktop\\\\nodeBirde\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card, Button, Popover } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages';\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me && me.id; //보호연산자 \n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 42\n      }\n    }),\n    action: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 37\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 37\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 33\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }))] // 배열 안에 jsx는 key가 필요!\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, __jsx(Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), __jsx(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/jaeho/Desktop/nodeBirde/front/components/PostCard.js"],"names":["React","Card","Button","Popover","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","PropTypes","PostImages","PostCard","post","me","state","user","id","Images","User","propTypes","shape","number","object","content","string","createdAt","Comments","arrayOf","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,QAAsC,MAAtC;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,eAAzC,EAA0DC,gBAA1D,QAAkF,mBAAlF;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAASL,WAAW,CAAEM,KAAD,IAASA,KAAK,CAACC,IAAhB,CAA1B;AACA,QAAMC,EAAE,GAAGH,EAAE,IAAIA,EAAE,CAACG,EAApB,CAF2B,CAEH;;AACxB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ,KAAkB,MAAC,UAAD;AAAY,MAAA,MAAM,EAAEL,IAAI,CAACK,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7B;AAEI,IAAA,MAAM,EAAE,CACJ,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,EAEJ,MAAC,aAAD;AAAe,MAAA,GAAG,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,EAGJ,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHI,EAIJ,MAAC,OAAD;AAAS,MAAA,GAAG,EAAC,MAAb;AAAoB,MAAA,OAAO,EACvB,MAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,EAAE,IAAIJ,IAAI,CAACM,IAAL,CAAUF,EAAV,KAAiBA,EAAvB,GACG,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CADH,GAMG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPR,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CAJI,CAFZ,CAqBI;AArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAuBI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,EAwBI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,EAyBI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,CADJ,CADJ;AAiCH,CApCD;;AAsCAL,QAAQ,CAACQ,SAAT,GAAqB;AACjBP,EAAAA,IAAI,EAAEH,SAAS,CAACW,KAAV,CAAgB;AAClBJ,IAAAA,EAAE,EAAEP,SAAS,CAACY,MADI;AAElBH,IAAAA,IAAI,EAAET,SAAS,CAACa,MAFE;AAGlBC,IAAAA,OAAO,EAAEd,SAAS,CAACe,MAHD;AAIlBC,IAAAA,SAAS,EAAEhB,SAAS,CAACa,MAJH;AAKlBI,IAAAA,QAAQ,EAAEjB,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACa,MAA5B,CALQ;AAMlBL,IAAAA,MAAM,EAAER,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACa,MAA5B;AANU,GAAhB,EAOHM;AARc,CAArB;AAWA,eAAejB,QAAf","sourcesContent":["import React from 'react';\r\nimport { Card, Button, Popover } from 'antd';\r\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport PostImages from './PostImages';\r\n\r\n\r\nconst PostCard = ({ post }) => {\r\n    const { me } = useSelector((state)=>state.user);\r\n    const id = me && me.id; //보호연산자 \r\n    return (\r\n        <div>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                action={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    <HeartOutlined key=\"heart\" />,\r\n                    <MessageOutlined key=\"comment\" />,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id ? (\r\n                                <>\r\n                                    <Button>수정</Button>\r\n                                    <Button type=\"danger\">삭제</Button>\r\n                                    {/* 내가쓴글 */}\r\n                                </>\r\n                            ) : <Button>신고</Button>}\r\n                                {/* 남이쓴글 */}\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n                // 배열 안에 jsx는 key가 필요!\r\n            >\r\n                <Image />\r\n                <Content />\r\n                <Button></Button>\r\n            </Card>\r\n            {/* <CommentForm />\r\n            <Comments /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}