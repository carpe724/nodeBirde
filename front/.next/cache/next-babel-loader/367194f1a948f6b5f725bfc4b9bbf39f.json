{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaeho\\\\Desktop\\\\nodeBirde\\\\front\\\\components\\\\LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nconst ButtonWrapper = styled.div`\n    margin-top: 10px;\n`;\nconst FormWrappper = styled(Form)`\n    padding : 10px;\n`;\n\nconst LoginForm = ({\n  setIsLoggedIn\n}) => {\n  // const [id, setId] = useState('');\n  // const onChangeId = useCallback((e) => {\n  //     setId(e.target.value); \n  // }, [])\n  const [id, onChangeId] = useInput(''); // const [password, setPassword] = useState('');\n  // const onChangePassword = useCallback((e) => {\n  //     setPassword(e.target.value);\n  // }, [])\n\n  const [password, onChangePassword] = useInput('');\n  const onSubmitForm = useCallback(() => {\n    console.log(id, password);\n    setIsLoggedIn(true);\n  }, [id, password]);\n  const style = useMemo(() => ({\n    marginTop: 10\n  }), []);\n  const ButtonLeft = useMemo(() => ({\n    marginLeft: 10\n  }), []);\n  return __jsx(FormWrappper, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), __jsx(ButtonWrapper, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 38\n    }\n  }, __jsx(Button, {\n    style: ButtonLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 41\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/jaeho/Desktop/nodeBirde/front/components/LoginForm.js"],"names":["React","useState","useCallback","useMemo","Form","Input","Button","Link","styled","PropTypes","useInput","ButtonWrapper","div","FormWrappper","LoginForm","setIsLoggedIn","id","onChangeId","password","onChangePassword","onSubmitForm","console","log","style","marginTop","ButtonLeft","marginLeft","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst ButtonWrapper = styled.div`\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst FormWrappper = styled(Form)`\r\n    padding : 10px;\r\n`\r\n\r\nconst LoginForm = ({ setIsLoggedIn }) => {\r\n    // const [id, setId] = useState('');\r\n    // const onChangeId = useCallback((e) => {\r\n    //     setId(e.target.value); \r\n    // }, [])\r\n    const [id, onChangeId] = useInput('');\r\n\r\n    // const [password, setPassword] = useState('');\r\n    // const onChangePassword = useCallback((e) => {\r\n    //     setPassword(e.target.value);\r\n    // }, [])\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    const onSubmitForm = useCallback(() => {\r\n        console.log(id, password);\r\n        setIsLoggedIn(true);\r\n    }, [id, password])\r\n\r\n    const style = useMemo(()=>({marginTop : 10}), []);\r\n\r\n    const ButtonLeft = useMemo(()=>({marginLeft: 10}), []);\r\n\r\n    return(\r\n        <FormWrappper onFinish={onSubmitForm}>\r\n            {/* htmlType submit 이 호출되면 onFinish 호출 */}\r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br />\r\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br />\r\n                <Input \r\n                    name=\"user-password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={onChangePassword} \r\n                    required \r\n                />\r\n            </div>\r\n            <ButtonWrapper style={style}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={false}>로그인</Button>\r\n                <Link href=\"/signup\"><a><Button style={ButtonLeft}>회원가입</Button></a></Link>\r\n            </ButtonWrapper>\r\n        </FormWrappper>\r\n    )\r\n};\r\n\r\nLoginForm.propTypes = {\r\n    setIsLoggedIn: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}