{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) // 배포용은 중앙 데이터 히스토리를 숨기고 메모리를 아끼기위해 devtool off\n  : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true // redux 에러를 표시해주어 개발시 용의한 옵션\n\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/jaeho/Desktop/nodeBirde/front/store/configureStore.js"],"names":["createWrapper","createStore","compose","applyMiddleware","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAGA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACfN,OAAO,CAACC,eAAe,CAAC,GAAGI,WAAJ,CAAhB,CADQ,CAC0B;AAD1B,IAEfH,mBAAmB,CAACD,eAAe,CAAC,GAAGI,WAAJ,CAAhB,CAFrB;AAGA,QAAME,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUG,QAAV,CAAzB;AACA,SAAOC,KAAP;AACH,CAPD;;AASA,MAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAC1CK,EAAAA,KAAK,MADqC,CAE1C;;AAF0C,CAAjB,CAA7B;AAKA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducer from '../reducers';\r\n\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares)) // 배포용은 중앙 데이터 히스토리를 숨기고 메모리를 아끼기위해 devtool off\r\n    : composeWithDevTools(applyMiddleware(...middlewares))\r\n    const store = createStore(reducer, enhancer);\r\n    return store;\r\n}\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development',\r\n    // redux 에러를 표시해주어 개발시 용의한 옵션\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}