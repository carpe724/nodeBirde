{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggingIn: false,\n  // 로그인 시도중\n  isLoggedIn: false,\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const loginRequestAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n}; // export const loginSuccessAction = (data) => {\n//     return {\n//         type: 'LOG_IN_SUCCESS',\n//         data,\n//     }\n// }\n// export const loginFailureAction = (data) => {\n//     return {\n//         type: 'LOG_IN_FAILURE',\n//         data,\n//     }\n// }\n// saga에서 액션을 호출하므로 불필요\n\nexport const logoutRequestAction = {\n  type: 'LOG_OUT_REQUEST'\n}; // export const logoutSuccessAction =  {\n//     type: 'LOG_OUT_SUCCESS',\n// }\n// export const logoutFailureAction =  {\n//     type: 'LOG_OUT_FAILURE',\n// }\n// saga에서 액션을 호출하므로 불필요\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case 'LOG_IN_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'stickMark'\n        })\n      });\n\n    case 'LOG_IN_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n    // LOG_IN\n\n    case 'LOG_OUT_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true,\n        me: null\n      });\n\n    case 'LOG_OUT_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case 'LOG_OUT_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n    // LOG_OUT\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/jaeho/Desktop/nodeBirde/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggedIn","isLoggingOut","me","signUpData","loginData","loginRequestAction","data","type","logoutRequestAction","state","action","nickname"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,WAAW,EAAE,KADW;AACJ;AACpBC,EAAAA,UAAU,EAAE,KAFY;AAGxBC,EAAAA,YAAY,EAAE,KAHU;AAGH;AACrBC,EAAAA,EAAE,EAAE,IAJoB;AAKxBC,EAAAA,UAAU,EAAE,EALY;AAMxBC,EAAAA,SAAS,EAAE;AANa,CAArB;AASP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAE,gBADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,MAAME,mBAAmB,GAAI;AAChCD,EAAAA,IAAI,EAAE;AAD0B,CAA7B,C,CAGP;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,gBAAe,CAACE,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,gBAAL;AACI,6CACOE,KADP;AAEIV,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAK,gBAAL;AACI,6CACOU,KADP;AAEIV,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAG,IAHjB;AAIIE,QAAAA,EAAE,kCAAMQ,MAAM,CAACJ,IAAb;AAAmBK,UAAAA,QAAQ,EAAE;AAA7B;AAJN;;AAMJ,SAAK,gBAAL;AACI,6CACOF,KADP;AAEIV,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAG;AAHjB;AAKJ;;AAEA,SAAK,iBAAL;AACI,6CACOS,KADP;AAEIR,QAAAA,YAAY,EAAG,IAFnB;AAGIC,QAAAA,EAAE,EAAE;AAHR;;AAKJ,SAAK,iBAAL;AACI,6CACOO,KADP;AAEIR,QAAAA,YAAY,EAAG,KAFnB;AAGID,QAAAA,UAAU,EAAG,KAHjB;AAIIE,QAAAA,EAAE,EAAE;AAJR;;AAMJ,SAAK,iBAAL;AACI,6CACOO,KADP;AAEIR,QAAAA,YAAY,EAAG,KAFnB;AAGID,QAAAA,UAAU,EAAG,KAHjB;AAIIE,QAAAA,EAAE,EAAE;AAJR;AAMJ;;AAEA;AAAS;AACL,iCACOO,KADP;AAGH;AA/CL;AAiDH,CAlDD","sourcesContent":["export const initialState = {\r\n    isLoggingIn: false, // 로그인 시도중\r\n    isLoggedIn: false,\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n}\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: 'LOG_IN_REQUEST',\r\n        data,\r\n    }\r\n}\r\n// export const loginSuccessAction = (data) => {\r\n//     return {\r\n//         type: 'LOG_IN_SUCCESS',\r\n//         data,\r\n//     }\r\n// }\r\n// export const loginFailureAction = (data) => {\r\n//     return {\r\n//         type: 'LOG_IN_FAILURE',\r\n//         data,\r\n//     }\r\n// }\r\n\r\n// saga에서 액션을 호출하므로 불필요\r\n\r\nexport const logoutRequestAction =  {\r\n    type: 'LOG_OUT_REQUEST',\r\n}\r\n// export const logoutSuccessAction =  {\r\n//     type: 'LOG_OUT_SUCCESS',\r\n// }\r\n// export const logoutFailureAction =  {\r\n//     type: 'LOG_OUT_FAILURE',\r\n// }\r\n\r\n// saga에서 액션을 호출하므로 불필요\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOG_IN_REQUEST':\r\n            return{\r\n                ...state,\r\n                isLoggingIn: true,\r\n            };\r\n        case 'LOG_IN_SUCCESS':\r\n            return{\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn : true,\r\n                me: {...action.data, nickname: 'stickMark'},\r\n            };\r\n        case 'LOG_IN_FAILURE':\r\n            return{\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn : false,\r\n            };\r\n        // LOG_IN\r\n\r\n        case 'LOG_OUT_REQUEST':\r\n            return{\r\n                ...state,\r\n                isLoggingOut : true,\r\n                me: null,\r\n            };\r\n        case 'LOG_OUT_SUCCESS':\r\n            return{\r\n                ...state,\r\n                isLoggingOut : false,\r\n                isLoggedIn : false,\r\n                me: null,\r\n            };\r\n        case 'LOG_OUT_FAILURE':\r\n            return{\r\n                ...state,\r\n                isLoggingOut : false,\r\n                isLoggedIn : false,\r\n                me: null,\r\n            };\r\n        // LOG_OUT\r\n\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}